
EXTI.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000ae4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000001  00800060  00800060  00000b58  2**0
                  ALLOC
  2 .stab         00000c9c  00000000  00000000  00000b58  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000961  00000000  00000000  000017f4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 05 	jmp	0xa68	; 0xa68 <__vector_1>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a1 36       	cpi	r26, 0x61	; 97
  6c:	b1 07       	cpc	r27, r17
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 17 05 	call	0xa2e	; 0xa2e <main>
  74:	0c 94 70 05 	jmp	0xae0	; 0xae0 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <MDIO_voidSetPinDirection>:
#define DIO_PIND_REG      *((volatile u8 *) 0X30)


// MDIO_voidSetPinDirection(PORTA, PIN7, OUTPUT);
void MDIO_voidSetPinDirection(u8 A_u8PortNo, u8 A_u8PinNo, u8 A_u8PinDirection)
{
  7c:	df 93       	push	r29
  7e:	cf 93       	push	r28
  80:	cd b7       	in	r28, 0x3d	; 61
  82:	de b7       	in	r29, 0x3e	; 62
  84:	2d 97       	sbiw	r28, 0x0d	; 13
  86:	0f b6       	in	r0, 0x3f	; 63
  88:	f8 94       	cli
  8a:	de bf       	out	0x3e, r29	; 62
  8c:	0f be       	out	0x3f, r0	; 63
  8e:	cd bf       	out	0x3d, r28	; 61
  90:	89 83       	std	Y+1, r24	; 0x01
  92:	6a 83       	std	Y+2, r22	; 0x02
  94:	4b 83       	std	Y+3, r20	; 0x03
	if ( (A_u8PortNo<=PORTD) && (A_u8PinNo<=PIN7) && (A_u8PinDirection <=OUTPUT))
  96:	89 81       	ldd	r24, Y+1	; 0x01
  98:	84 30       	cpi	r24, 0x04	; 4
  9a:	08 f0       	brcs	.+2      	; 0x9e <MDIO_voidSetPinDirection+0x22>
  9c:	08 c1       	rjmp	.+528    	; 0x2ae <MDIO_voidSetPinDirection+0x232>
  9e:	8a 81       	ldd	r24, Y+2	; 0x02
  a0:	88 30       	cpi	r24, 0x08	; 8
  a2:	08 f0       	brcs	.+2      	; 0xa6 <MDIO_voidSetPinDirection+0x2a>
  a4:	04 c1       	rjmp	.+520    	; 0x2ae <MDIO_voidSetPinDirection+0x232>
  a6:	8b 81       	ldd	r24, Y+3	; 0x03
  a8:	82 30       	cpi	r24, 0x02	; 2
  aa:	08 f0       	brcs	.+2      	; 0xae <MDIO_voidSetPinDirection+0x32>
  ac:	00 c1       	rjmp	.+512    	; 0x2ae <MDIO_voidSetPinDirection+0x232>
	{
		switch (A_u8PortNo)
  ae:	89 81       	ldd	r24, Y+1	; 0x01
  b0:	28 2f       	mov	r18, r24
  b2:	30 e0       	ldi	r19, 0x00	; 0
  b4:	3d 87       	std	Y+13, r19	; 0x0d
  b6:	2c 87       	std	Y+12, r18	; 0x0c
  b8:	8c 85       	ldd	r24, Y+12	; 0x0c
  ba:	9d 85       	ldd	r25, Y+13	; 0x0d
  bc:	81 30       	cpi	r24, 0x01	; 1
  be:	91 05       	cpc	r25, r1
  c0:	09 f4       	brne	.+2      	; 0xc4 <MDIO_voidSetPinDirection+0x48>
  c2:	4f c0       	rjmp	.+158    	; 0x162 <MDIO_voidSetPinDirection+0xe6>
  c4:	2c 85       	ldd	r18, Y+12	; 0x0c
  c6:	3d 85       	ldd	r19, Y+13	; 0x0d
  c8:	22 30       	cpi	r18, 0x02	; 2
  ca:	31 05       	cpc	r19, r1
  cc:	2c f4       	brge	.+10     	; 0xd8 <MDIO_voidSetPinDirection+0x5c>
  ce:	8c 85       	ldd	r24, Y+12	; 0x0c
  d0:	9d 85       	ldd	r25, Y+13	; 0x0d
  d2:	00 97       	sbiw	r24, 0x00	; 0
  d4:	71 f0       	breq	.+28     	; 0xf2 <MDIO_voidSetPinDirection+0x76>
  d6:	eb c0       	rjmp	.+470    	; 0x2ae <MDIO_voidSetPinDirection+0x232>
  d8:	2c 85       	ldd	r18, Y+12	; 0x0c
  da:	3d 85       	ldd	r19, Y+13	; 0x0d
  dc:	22 30       	cpi	r18, 0x02	; 2
  de:	31 05       	cpc	r19, r1
  e0:	09 f4       	brne	.+2      	; 0xe4 <MDIO_voidSetPinDirection+0x68>
  e2:	77 c0       	rjmp	.+238    	; 0x1d2 <MDIO_voidSetPinDirection+0x156>
  e4:	8c 85       	ldd	r24, Y+12	; 0x0c
  e6:	9d 85       	ldd	r25, Y+13	; 0x0d
  e8:	83 30       	cpi	r24, 0x03	; 3
  ea:	91 05       	cpc	r25, r1
  ec:	09 f4       	brne	.+2      	; 0xf0 <MDIO_voidSetPinDirection+0x74>
  ee:	a9 c0       	rjmp	.+338    	; 0x242 <MDIO_voidSetPinDirection+0x1c6>
  f0:	de c0       	rjmp	.+444    	; 0x2ae <MDIO_voidSetPinDirection+0x232>
		{
		  case PORTA:
			  	  	  switch (A_u8PinDirection)
  f2:	8b 81       	ldd	r24, Y+3	; 0x03
  f4:	28 2f       	mov	r18, r24
  f6:	30 e0       	ldi	r19, 0x00	; 0
  f8:	3b 87       	std	Y+11, r19	; 0x0b
  fa:	2a 87       	std	Y+10, r18	; 0x0a
  fc:	8a 85       	ldd	r24, Y+10	; 0x0a
  fe:	9b 85       	ldd	r25, Y+11	; 0x0b
 100:	00 97       	sbiw	r24, 0x00	; 0
 102:	d1 f0       	breq	.+52     	; 0x138 <MDIO_voidSetPinDirection+0xbc>
 104:	2a 85       	ldd	r18, Y+10	; 0x0a
 106:	3b 85       	ldd	r19, Y+11	; 0x0b
 108:	21 30       	cpi	r18, 0x01	; 1
 10a:	31 05       	cpc	r19, r1
 10c:	09 f0       	breq	.+2      	; 0x110 <MDIO_voidSetPinDirection+0x94>
 10e:	cf c0       	rjmp	.+414    	; 0x2ae <MDIO_voidSetPinDirection+0x232>
			  	  	  {
			  	  	    case OUTPUT: SET_BIT(DIO_DDRA_REG,A_u8PinNo); break;
 110:	aa e3       	ldi	r26, 0x3A	; 58
 112:	b0 e0       	ldi	r27, 0x00	; 0
 114:	ea e3       	ldi	r30, 0x3A	; 58
 116:	f0 e0       	ldi	r31, 0x00	; 0
 118:	80 81       	ld	r24, Z
 11a:	48 2f       	mov	r20, r24
 11c:	8a 81       	ldd	r24, Y+2	; 0x02
 11e:	28 2f       	mov	r18, r24
 120:	30 e0       	ldi	r19, 0x00	; 0
 122:	81 e0       	ldi	r24, 0x01	; 1
 124:	90 e0       	ldi	r25, 0x00	; 0
 126:	02 2e       	mov	r0, r18
 128:	02 c0       	rjmp	.+4      	; 0x12e <MDIO_voidSetPinDirection+0xb2>
 12a:	88 0f       	add	r24, r24
 12c:	99 1f       	adc	r25, r25
 12e:	0a 94       	dec	r0
 130:	e2 f7       	brpl	.-8      	; 0x12a <MDIO_voidSetPinDirection+0xae>
 132:	84 2b       	or	r24, r20
 134:	8c 93       	st	X, r24
 136:	bb c0       	rjmp	.+374    	; 0x2ae <MDIO_voidSetPinDirection+0x232>
			  	  	    case INPUT : CLR_BIT(DIO_DDRA_REG,A_u8PinNo); break;
 138:	aa e3       	ldi	r26, 0x3A	; 58
 13a:	b0 e0       	ldi	r27, 0x00	; 0
 13c:	ea e3       	ldi	r30, 0x3A	; 58
 13e:	f0 e0       	ldi	r31, 0x00	; 0
 140:	80 81       	ld	r24, Z
 142:	48 2f       	mov	r20, r24
 144:	8a 81       	ldd	r24, Y+2	; 0x02
 146:	28 2f       	mov	r18, r24
 148:	30 e0       	ldi	r19, 0x00	; 0
 14a:	81 e0       	ldi	r24, 0x01	; 1
 14c:	90 e0       	ldi	r25, 0x00	; 0
 14e:	02 2e       	mov	r0, r18
 150:	02 c0       	rjmp	.+4      	; 0x156 <MDIO_voidSetPinDirection+0xda>
 152:	88 0f       	add	r24, r24
 154:	99 1f       	adc	r25, r25
 156:	0a 94       	dec	r0
 158:	e2 f7       	brpl	.-8      	; 0x152 <MDIO_voidSetPinDirection+0xd6>
 15a:	80 95       	com	r24
 15c:	84 23       	and	r24, r20
 15e:	8c 93       	st	X, r24
 160:	a6 c0       	rjmp	.+332    	; 0x2ae <MDIO_voidSetPinDirection+0x232>
			  	  	  }
			  	  	  break;
		 case PORTB:
					  switch (A_u8PinDirection)
 162:	8b 81       	ldd	r24, Y+3	; 0x03
 164:	28 2f       	mov	r18, r24
 166:	30 e0       	ldi	r19, 0x00	; 0
 168:	39 87       	std	Y+9, r19	; 0x09
 16a:	28 87       	std	Y+8, r18	; 0x08
 16c:	88 85       	ldd	r24, Y+8	; 0x08
 16e:	99 85       	ldd	r25, Y+9	; 0x09
 170:	00 97       	sbiw	r24, 0x00	; 0
 172:	d1 f0       	breq	.+52     	; 0x1a8 <MDIO_voidSetPinDirection+0x12c>
 174:	28 85       	ldd	r18, Y+8	; 0x08
 176:	39 85       	ldd	r19, Y+9	; 0x09
 178:	21 30       	cpi	r18, 0x01	; 1
 17a:	31 05       	cpc	r19, r1
 17c:	09 f0       	breq	.+2      	; 0x180 <MDIO_voidSetPinDirection+0x104>
 17e:	97 c0       	rjmp	.+302    	; 0x2ae <MDIO_voidSetPinDirection+0x232>
					  {
						case OUTPUT: SET_BIT(DIO_DDRB_REG,A_u8PinNo); break;
 180:	a7 e3       	ldi	r26, 0x37	; 55
 182:	b0 e0       	ldi	r27, 0x00	; 0
 184:	e7 e3       	ldi	r30, 0x37	; 55
 186:	f0 e0       	ldi	r31, 0x00	; 0
 188:	80 81       	ld	r24, Z
 18a:	48 2f       	mov	r20, r24
 18c:	8a 81       	ldd	r24, Y+2	; 0x02
 18e:	28 2f       	mov	r18, r24
 190:	30 e0       	ldi	r19, 0x00	; 0
 192:	81 e0       	ldi	r24, 0x01	; 1
 194:	90 e0       	ldi	r25, 0x00	; 0
 196:	02 2e       	mov	r0, r18
 198:	02 c0       	rjmp	.+4      	; 0x19e <MDIO_voidSetPinDirection+0x122>
 19a:	88 0f       	add	r24, r24
 19c:	99 1f       	adc	r25, r25
 19e:	0a 94       	dec	r0
 1a0:	e2 f7       	brpl	.-8      	; 0x19a <MDIO_voidSetPinDirection+0x11e>
 1a2:	84 2b       	or	r24, r20
 1a4:	8c 93       	st	X, r24
 1a6:	83 c0       	rjmp	.+262    	; 0x2ae <MDIO_voidSetPinDirection+0x232>
						case INPUT : CLR_BIT(DIO_DDRB_REG,A_u8PinNo); break;
 1a8:	a7 e3       	ldi	r26, 0x37	; 55
 1aa:	b0 e0       	ldi	r27, 0x00	; 0
 1ac:	e7 e3       	ldi	r30, 0x37	; 55
 1ae:	f0 e0       	ldi	r31, 0x00	; 0
 1b0:	80 81       	ld	r24, Z
 1b2:	48 2f       	mov	r20, r24
 1b4:	8a 81       	ldd	r24, Y+2	; 0x02
 1b6:	28 2f       	mov	r18, r24
 1b8:	30 e0       	ldi	r19, 0x00	; 0
 1ba:	81 e0       	ldi	r24, 0x01	; 1
 1bc:	90 e0       	ldi	r25, 0x00	; 0
 1be:	02 2e       	mov	r0, r18
 1c0:	02 c0       	rjmp	.+4      	; 0x1c6 <MDIO_voidSetPinDirection+0x14a>
 1c2:	88 0f       	add	r24, r24
 1c4:	99 1f       	adc	r25, r25
 1c6:	0a 94       	dec	r0
 1c8:	e2 f7       	brpl	.-8      	; 0x1c2 <MDIO_voidSetPinDirection+0x146>
 1ca:	80 95       	com	r24
 1cc:	84 23       	and	r24, r20
 1ce:	8c 93       	st	X, r24
 1d0:	6e c0       	rjmp	.+220    	; 0x2ae <MDIO_voidSetPinDirection+0x232>
					  }
					  break;
	     case PORTC:
					  switch (A_u8PinDirection)
 1d2:	8b 81       	ldd	r24, Y+3	; 0x03
 1d4:	28 2f       	mov	r18, r24
 1d6:	30 e0       	ldi	r19, 0x00	; 0
 1d8:	3f 83       	std	Y+7, r19	; 0x07
 1da:	2e 83       	std	Y+6, r18	; 0x06
 1dc:	8e 81       	ldd	r24, Y+6	; 0x06
 1de:	9f 81       	ldd	r25, Y+7	; 0x07
 1e0:	00 97       	sbiw	r24, 0x00	; 0
 1e2:	d1 f0       	breq	.+52     	; 0x218 <MDIO_voidSetPinDirection+0x19c>
 1e4:	2e 81       	ldd	r18, Y+6	; 0x06
 1e6:	3f 81       	ldd	r19, Y+7	; 0x07
 1e8:	21 30       	cpi	r18, 0x01	; 1
 1ea:	31 05       	cpc	r19, r1
 1ec:	09 f0       	breq	.+2      	; 0x1f0 <MDIO_voidSetPinDirection+0x174>
 1ee:	5f c0       	rjmp	.+190    	; 0x2ae <MDIO_voidSetPinDirection+0x232>
					  {
						case OUTPUT: SET_BIT(DIO_DDRC_REG,A_u8PinNo); break;
 1f0:	a4 e3       	ldi	r26, 0x34	; 52
 1f2:	b0 e0       	ldi	r27, 0x00	; 0
 1f4:	e4 e3       	ldi	r30, 0x34	; 52
 1f6:	f0 e0       	ldi	r31, 0x00	; 0
 1f8:	80 81       	ld	r24, Z
 1fa:	48 2f       	mov	r20, r24
 1fc:	8a 81       	ldd	r24, Y+2	; 0x02
 1fe:	28 2f       	mov	r18, r24
 200:	30 e0       	ldi	r19, 0x00	; 0
 202:	81 e0       	ldi	r24, 0x01	; 1
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	02 2e       	mov	r0, r18
 208:	02 c0       	rjmp	.+4      	; 0x20e <MDIO_voidSetPinDirection+0x192>
 20a:	88 0f       	add	r24, r24
 20c:	99 1f       	adc	r25, r25
 20e:	0a 94       	dec	r0
 210:	e2 f7       	brpl	.-8      	; 0x20a <MDIO_voidSetPinDirection+0x18e>
 212:	84 2b       	or	r24, r20
 214:	8c 93       	st	X, r24
 216:	4b c0       	rjmp	.+150    	; 0x2ae <MDIO_voidSetPinDirection+0x232>
						case INPUT : CLR_BIT(DIO_DDRC_REG,A_u8PinNo); break;
 218:	a4 e3       	ldi	r26, 0x34	; 52
 21a:	b0 e0       	ldi	r27, 0x00	; 0
 21c:	e4 e3       	ldi	r30, 0x34	; 52
 21e:	f0 e0       	ldi	r31, 0x00	; 0
 220:	80 81       	ld	r24, Z
 222:	48 2f       	mov	r20, r24
 224:	8a 81       	ldd	r24, Y+2	; 0x02
 226:	28 2f       	mov	r18, r24
 228:	30 e0       	ldi	r19, 0x00	; 0
 22a:	81 e0       	ldi	r24, 0x01	; 1
 22c:	90 e0       	ldi	r25, 0x00	; 0
 22e:	02 2e       	mov	r0, r18
 230:	02 c0       	rjmp	.+4      	; 0x236 <MDIO_voidSetPinDirection+0x1ba>
 232:	88 0f       	add	r24, r24
 234:	99 1f       	adc	r25, r25
 236:	0a 94       	dec	r0
 238:	e2 f7       	brpl	.-8      	; 0x232 <MDIO_voidSetPinDirection+0x1b6>
 23a:	80 95       	com	r24
 23c:	84 23       	and	r24, r20
 23e:	8c 93       	st	X, r24
 240:	36 c0       	rjmp	.+108    	; 0x2ae <MDIO_voidSetPinDirection+0x232>
					  }
					  break;
	     case PORTD:
					  switch (A_u8PinDirection)
 242:	8b 81       	ldd	r24, Y+3	; 0x03
 244:	28 2f       	mov	r18, r24
 246:	30 e0       	ldi	r19, 0x00	; 0
 248:	3d 83       	std	Y+5, r19	; 0x05
 24a:	2c 83       	std	Y+4, r18	; 0x04
 24c:	8c 81       	ldd	r24, Y+4	; 0x04
 24e:	9d 81       	ldd	r25, Y+5	; 0x05
 250:	00 97       	sbiw	r24, 0x00	; 0
 252:	c9 f0       	breq	.+50     	; 0x286 <MDIO_voidSetPinDirection+0x20a>
 254:	2c 81       	ldd	r18, Y+4	; 0x04
 256:	3d 81       	ldd	r19, Y+5	; 0x05
 258:	21 30       	cpi	r18, 0x01	; 1
 25a:	31 05       	cpc	r19, r1
 25c:	41 f5       	brne	.+80     	; 0x2ae <MDIO_voidSetPinDirection+0x232>
					  {
						case OUTPUT: SET_BIT(DIO_DDRD_REG,A_u8PinNo); break;
 25e:	a1 e3       	ldi	r26, 0x31	; 49
 260:	b0 e0       	ldi	r27, 0x00	; 0
 262:	e1 e3       	ldi	r30, 0x31	; 49
 264:	f0 e0       	ldi	r31, 0x00	; 0
 266:	80 81       	ld	r24, Z
 268:	48 2f       	mov	r20, r24
 26a:	8a 81       	ldd	r24, Y+2	; 0x02
 26c:	28 2f       	mov	r18, r24
 26e:	30 e0       	ldi	r19, 0x00	; 0
 270:	81 e0       	ldi	r24, 0x01	; 1
 272:	90 e0       	ldi	r25, 0x00	; 0
 274:	02 2e       	mov	r0, r18
 276:	02 c0       	rjmp	.+4      	; 0x27c <MDIO_voidSetPinDirection+0x200>
 278:	88 0f       	add	r24, r24
 27a:	99 1f       	adc	r25, r25
 27c:	0a 94       	dec	r0
 27e:	e2 f7       	brpl	.-8      	; 0x278 <MDIO_voidSetPinDirection+0x1fc>
 280:	84 2b       	or	r24, r20
 282:	8c 93       	st	X, r24
 284:	14 c0       	rjmp	.+40     	; 0x2ae <MDIO_voidSetPinDirection+0x232>
						case INPUT : CLR_BIT(DIO_DDRD_REG,A_u8PinNo); break;
 286:	a1 e3       	ldi	r26, 0x31	; 49
 288:	b0 e0       	ldi	r27, 0x00	; 0
 28a:	e1 e3       	ldi	r30, 0x31	; 49
 28c:	f0 e0       	ldi	r31, 0x00	; 0
 28e:	80 81       	ld	r24, Z
 290:	48 2f       	mov	r20, r24
 292:	8a 81       	ldd	r24, Y+2	; 0x02
 294:	28 2f       	mov	r18, r24
 296:	30 e0       	ldi	r19, 0x00	; 0
 298:	81 e0       	ldi	r24, 0x01	; 1
 29a:	90 e0       	ldi	r25, 0x00	; 0
 29c:	02 2e       	mov	r0, r18
 29e:	02 c0       	rjmp	.+4      	; 0x2a4 <MDIO_voidSetPinDirection+0x228>
 2a0:	88 0f       	add	r24, r24
 2a2:	99 1f       	adc	r25, r25
 2a4:	0a 94       	dec	r0
 2a6:	e2 f7       	brpl	.-8      	; 0x2a0 <MDIO_voidSetPinDirection+0x224>
 2a8:	80 95       	com	r24
 2aa:	84 23       	and	r24, r20
 2ac:	8c 93       	st	X, r24
	else
	{

	}
	return;
}
 2ae:	2d 96       	adiw	r28, 0x0d	; 13
 2b0:	0f b6       	in	r0, 0x3f	; 63
 2b2:	f8 94       	cli
 2b4:	de bf       	out	0x3e, r29	; 62
 2b6:	0f be       	out	0x3f, r0	; 63
 2b8:	cd bf       	out	0x3d, r28	; 61
 2ba:	cf 91       	pop	r28
 2bc:	df 91       	pop	r29
 2be:	08 95       	ret

000002c0 <MDIO_voidSetPinValue>:


void MDIO_voidSetPinValue(u8 A_u8PortNo, u8 A_u8PinNo, u8 A_u8PinValue)
{
 2c0:	df 93       	push	r29
 2c2:	cf 93       	push	r28
 2c4:	cd b7       	in	r28, 0x3d	; 61
 2c6:	de b7       	in	r29, 0x3e	; 62
 2c8:	2d 97       	sbiw	r28, 0x0d	; 13
 2ca:	0f b6       	in	r0, 0x3f	; 63
 2cc:	f8 94       	cli
 2ce:	de bf       	out	0x3e, r29	; 62
 2d0:	0f be       	out	0x3f, r0	; 63
 2d2:	cd bf       	out	0x3d, r28	; 61
 2d4:	89 83       	std	Y+1, r24	; 0x01
 2d6:	6a 83       	std	Y+2, r22	; 0x02
 2d8:	4b 83       	std	Y+3, r20	; 0x03
	if ( (A_u8PortNo<=PORTD) && (A_u8PinNo<=PIN7) && (A_u8PinValue <=HIGH))
 2da:	89 81       	ldd	r24, Y+1	; 0x01
 2dc:	84 30       	cpi	r24, 0x04	; 4
 2de:	08 f0       	brcs	.+2      	; 0x2e2 <MDIO_voidSetPinValue+0x22>
 2e0:	08 c1       	rjmp	.+528    	; 0x4f2 <MDIO_voidSetPinValue+0x232>
 2e2:	8a 81       	ldd	r24, Y+2	; 0x02
 2e4:	88 30       	cpi	r24, 0x08	; 8
 2e6:	08 f0       	brcs	.+2      	; 0x2ea <MDIO_voidSetPinValue+0x2a>
 2e8:	04 c1       	rjmp	.+520    	; 0x4f2 <MDIO_voidSetPinValue+0x232>
 2ea:	8b 81       	ldd	r24, Y+3	; 0x03
 2ec:	82 30       	cpi	r24, 0x02	; 2
 2ee:	08 f0       	brcs	.+2      	; 0x2f2 <MDIO_voidSetPinValue+0x32>
 2f0:	00 c1       	rjmp	.+512    	; 0x4f2 <MDIO_voidSetPinValue+0x232>
	{
		switch (A_u8PortNo)
 2f2:	89 81       	ldd	r24, Y+1	; 0x01
 2f4:	28 2f       	mov	r18, r24
 2f6:	30 e0       	ldi	r19, 0x00	; 0
 2f8:	3d 87       	std	Y+13, r19	; 0x0d
 2fa:	2c 87       	std	Y+12, r18	; 0x0c
 2fc:	8c 85       	ldd	r24, Y+12	; 0x0c
 2fe:	9d 85       	ldd	r25, Y+13	; 0x0d
 300:	81 30       	cpi	r24, 0x01	; 1
 302:	91 05       	cpc	r25, r1
 304:	09 f4       	brne	.+2      	; 0x308 <MDIO_voidSetPinValue+0x48>
 306:	4f c0       	rjmp	.+158    	; 0x3a6 <MDIO_voidSetPinValue+0xe6>
 308:	2c 85       	ldd	r18, Y+12	; 0x0c
 30a:	3d 85       	ldd	r19, Y+13	; 0x0d
 30c:	22 30       	cpi	r18, 0x02	; 2
 30e:	31 05       	cpc	r19, r1
 310:	2c f4       	brge	.+10     	; 0x31c <MDIO_voidSetPinValue+0x5c>
 312:	8c 85       	ldd	r24, Y+12	; 0x0c
 314:	9d 85       	ldd	r25, Y+13	; 0x0d
 316:	00 97       	sbiw	r24, 0x00	; 0
 318:	71 f0       	breq	.+28     	; 0x336 <MDIO_voidSetPinValue+0x76>
 31a:	eb c0       	rjmp	.+470    	; 0x4f2 <MDIO_voidSetPinValue+0x232>
 31c:	2c 85       	ldd	r18, Y+12	; 0x0c
 31e:	3d 85       	ldd	r19, Y+13	; 0x0d
 320:	22 30       	cpi	r18, 0x02	; 2
 322:	31 05       	cpc	r19, r1
 324:	09 f4       	brne	.+2      	; 0x328 <MDIO_voidSetPinValue+0x68>
 326:	77 c0       	rjmp	.+238    	; 0x416 <MDIO_voidSetPinValue+0x156>
 328:	8c 85       	ldd	r24, Y+12	; 0x0c
 32a:	9d 85       	ldd	r25, Y+13	; 0x0d
 32c:	83 30       	cpi	r24, 0x03	; 3
 32e:	91 05       	cpc	r25, r1
 330:	09 f4       	brne	.+2      	; 0x334 <MDIO_voidSetPinValue+0x74>
 332:	a9 c0       	rjmp	.+338    	; 0x486 <MDIO_voidSetPinValue+0x1c6>
 334:	de c0       	rjmp	.+444    	; 0x4f2 <MDIO_voidSetPinValue+0x232>
		{
			case PORTA:
						switch (A_u8PinValue)
 336:	8b 81       	ldd	r24, Y+3	; 0x03
 338:	28 2f       	mov	r18, r24
 33a:	30 e0       	ldi	r19, 0x00	; 0
 33c:	3b 87       	std	Y+11, r19	; 0x0b
 33e:	2a 87       	std	Y+10, r18	; 0x0a
 340:	8a 85       	ldd	r24, Y+10	; 0x0a
 342:	9b 85       	ldd	r25, Y+11	; 0x0b
 344:	00 97       	sbiw	r24, 0x00	; 0
 346:	d1 f0       	breq	.+52     	; 0x37c <MDIO_voidSetPinValue+0xbc>
 348:	2a 85       	ldd	r18, Y+10	; 0x0a
 34a:	3b 85       	ldd	r19, Y+11	; 0x0b
 34c:	21 30       	cpi	r18, 0x01	; 1
 34e:	31 05       	cpc	r19, r1
 350:	09 f0       	breq	.+2      	; 0x354 <MDIO_voidSetPinValue+0x94>
 352:	cf c0       	rjmp	.+414    	; 0x4f2 <MDIO_voidSetPinValue+0x232>
						{
						case HIGH: SET_BIT(DIO_PORTA_REG,A_u8PinNo); break;
 354:	ab e3       	ldi	r26, 0x3B	; 59
 356:	b0 e0       	ldi	r27, 0x00	; 0
 358:	eb e3       	ldi	r30, 0x3B	; 59
 35a:	f0 e0       	ldi	r31, 0x00	; 0
 35c:	80 81       	ld	r24, Z
 35e:	48 2f       	mov	r20, r24
 360:	8a 81       	ldd	r24, Y+2	; 0x02
 362:	28 2f       	mov	r18, r24
 364:	30 e0       	ldi	r19, 0x00	; 0
 366:	81 e0       	ldi	r24, 0x01	; 1
 368:	90 e0       	ldi	r25, 0x00	; 0
 36a:	02 2e       	mov	r0, r18
 36c:	02 c0       	rjmp	.+4      	; 0x372 <MDIO_voidSetPinValue+0xb2>
 36e:	88 0f       	add	r24, r24
 370:	99 1f       	adc	r25, r25
 372:	0a 94       	dec	r0
 374:	e2 f7       	brpl	.-8      	; 0x36e <MDIO_voidSetPinValue+0xae>
 376:	84 2b       	or	r24, r20
 378:	8c 93       	st	X, r24
 37a:	bb c0       	rjmp	.+374    	; 0x4f2 <MDIO_voidSetPinValue+0x232>
						case LOW : CLR_BIT(DIO_PORTA_REG,A_u8PinNo); break;
 37c:	ab e3       	ldi	r26, 0x3B	; 59
 37e:	b0 e0       	ldi	r27, 0x00	; 0
 380:	eb e3       	ldi	r30, 0x3B	; 59
 382:	f0 e0       	ldi	r31, 0x00	; 0
 384:	80 81       	ld	r24, Z
 386:	48 2f       	mov	r20, r24
 388:	8a 81       	ldd	r24, Y+2	; 0x02
 38a:	28 2f       	mov	r18, r24
 38c:	30 e0       	ldi	r19, 0x00	; 0
 38e:	81 e0       	ldi	r24, 0x01	; 1
 390:	90 e0       	ldi	r25, 0x00	; 0
 392:	02 2e       	mov	r0, r18
 394:	02 c0       	rjmp	.+4      	; 0x39a <MDIO_voidSetPinValue+0xda>
 396:	88 0f       	add	r24, r24
 398:	99 1f       	adc	r25, r25
 39a:	0a 94       	dec	r0
 39c:	e2 f7       	brpl	.-8      	; 0x396 <MDIO_voidSetPinValue+0xd6>
 39e:	80 95       	com	r24
 3a0:	84 23       	and	r24, r20
 3a2:	8c 93       	st	X, r24
 3a4:	a6 c0       	rjmp	.+332    	; 0x4f2 <MDIO_voidSetPinValue+0x232>
						}
						break;
			case PORTB:
						switch (A_u8PinValue)
 3a6:	8b 81       	ldd	r24, Y+3	; 0x03
 3a8:	28 2f       	mov	r18, r24
 3aa:	30 e0       	ldi	r19, 0x00	; 0
 3ac:	39 87       	std	Y+9, r19	; 0x09
 3ae:	28 87       	std	Y+8, r18	; 0x08
 3b0:	88 85       	ldd	r24, Y+8	; 0x08
 3b2:	99 85       	ldd	r25, Y+9	; 0x09
 3b4:	00 97       	sbiw	r24, 0x00	; 0
 3b6:	d1 f0       	breq	.+52     	; 0x3ec <MDIO_voidSetPinValue+0x12c>
 3b8:	28 85       	ldd	r18, Y+8	; 0x08
 3ba:	39 85       	ldd	r19, Y+9	; 0x09
 3bc:	21 30       	cpi	r18, 0x01	; 1
 3be:	31 05       	cpc	r19, r1
 3c0:	09 f0       	breq	.+2      	; 0x3c4 <MDIO_voidSetPinValue+0x104>
 3c2:	97 c0       	rjmp	.+302    	; 0x4f2 <MDIO_voidSetPinValue+0x232>
						{
						case HIGH: SET_BIT(DIO_PORTB_REG,A_u8PinNo); break;
 3c4:	a8 e3       	ldi	r26, 0x38	; 56
 3c6:	b0 e0       	ldi	r27, 0x00	; 0
 3c8:	e8 e3       	ldi	r30, 0x38	; 56
 3ca:	f0 e0       	ldi	r31, 0x00	; 0
 3cc:	80 81       	ld	r24, Z
 3ce:	48 2f       	mov	r20, r24
 3d0:	8a 81       	ldd	r24, Y+2	; 0x02
 3d2:	28 2f       	mov	r18, r24
 3d4:	30 e0       	ldi	r19, 0x00	; 0
 3d6:	81 e0       	ldi	r24, 0x01	; 1
 3d8:	90 e0       	ldi	r25, 0x00	; 0
 3da:	02 2e       	mov	r0, r18
 3dc:	02 c0       	rjmp	.+4      	; 0x3e2 <MDIO_voidSetPinValue+0x122>
 3de:	88 0f       	add	r24, r24
 3e0:	99 1f       	adc	r25, r25
 3e2:	0a 94       	dec	r0
 3e4:	e2 f7       	brpl	.-8      	; 0x3de <MDIO_voidSetPinValue+0x11e>
 3e6:	84 2b       	or	r24, r20
 3e8:	8c 93       	st	X, r24
 3ea:	83 c0       	rjmp	.+262    	; 0x4f2 <MDIO_voidSetPinValue+0x232>
						case LOW : CLR_BIT(DIO_PORTB_REG,A_u8PinNo); break;
 3ec:	a8 e3       	ldi	r26, 0x38	; 56
 3ee:	b0 e0       	ldi	r27, 0x00	; 0
 3f0:	e8 e3       	ldi	r30, 0x38	; 56
 3f2:	f0 e0       	ldi	r31, 0x00	; 0
 3f4:	80 81       	ld	r24, Z
 3f6:	48 2f       	mov	r20, r24
 3f8:	8a 81       	ldd	r24, Y+2	; 0x02
 3fa:	28 2f       	mov	r18, r24
 3fc:	30 e0       	ldi	r19, 0x00	; 0
 3fe:	81 e0       	ldi	r24, 0x01	; 1
 400:	90 e0       	ldi	r25, 0x00	; 0
 402:	02 2e       	mov	r0, r18
 404:	02 c0       	rjmp	.+4      	; 0x40a <MDIO_voidSetPinValue+0x14a>
 406:	88 0f       	add	r24, r24
 408:	99 1f       	adc	r25, r25
 40a:	0a 94       	dec	r0
 40c:	e2 f7       	brpl	.-8      	; 0x406 <MDIO_voidSetPinValue+0x146>
 40e:	80 95       	com	r24
 410:	84 23       	and	r24, r20
 412:	8c 93       	st	X, r24
 414:	6e c0       	rjmp	.+220    	; 0x4f2 <MDIO_voidSetPinValue+0x232>
						}
						break;
			case PORTC:
						switch (A_u8PinValue)
 416:	8b 81       	ldd	r24, Y+3	; 0x03
 418:	28 2f       	mov	r18, r24
 41a:	30 e0       	ldi	r19, 0x00	; 0
 41c:	3f 83       	std	Y+7, r19	; 0x07
 41e:	2e 83       	std	Y+6, r18	; 0x06
 420:	8e 81       	ldd	r24, Y+6	; 0x06
 422:	9f 81       	ldd	r25, Y+7	; 0x07
 424:	00 97       	sbiw	r24, 0x00	; 0
 426:	d1 f0       	breq	.+52     	; 0x45c <MDIO_voidSetPinValue+0x19c>
 428:	2e 81       	ldd	r18, Y+6	; 0x06
 42a:	3f 81       	ldd	r19, Y+7	; 0x07
 42c:	21 30       	cpi	r18, 0x01	; 1
 42e:	31 05       	cpc	r19, r1
 430:	09 f0       	breq	.+2      	; 0x434 <MDIO_voidSetPinValue+0x174>
 432:	5f c0       	rjmp	.+190    	; 0x4f2 <MDIO_voidSetPinValue+0x232>
						{
						case HIGH: SET_BIT(DIO_PORTC_REG,A_u8PinNo); break;
 434:	a5 e3       	ldi	r26, 0x35	; 53
 436:	b0 e0       	ldi	r27, 0x00	; 0
 438:	e5 e3       	ldi	r30, 0x35	; 53
 43a:	f0 e0       	ldi	r31, 0x00	; 0
 43c:	80 81       	ld	r24, Z
 43e:	48 2f       	mov	r20, r24
 440:	8a 81       	ldd	r24, Y+2	; 0x02
 442:	28 2f       	mov	r18, r24
 444:	30 e0       	ldi	r19, 0x00	; 0
 446:	81 e0       	ldi	r24, 0x01	; 1
 448:	90 e0       	ldi	r25, 0x00	; 0
 44a:	02 2e       	mov	r0, r18
 44c:	02 c0       	rjmp	.+4      	; 0x452 <MDIO_voidSetPinValue+0x192>
 44e:	88 0f       	add	r24, r24
 450:	99 1f       	adc	r25, r25
 452:	0a 94       	dec	r0
 454:	e2 f7       	brpl	.-8      	; 0x44e <MDIO_voidSetPinValue+0x18e>
 456:	84 2b       	or	r24, r20
 458:	8c 93       	st	X, r24
 45a:	4b c0       	rjmp	.+150    	; 0x4f2 <MDIO_voidSetPinValue+0x232>
						case LOW : CLR_BIT(DIO_PORTC_REG,A_u8PinNo); break;
 45c:	a5 e3       	ldi	r26, 0x35	; 53
 45e:	b0 e0       	ldi	r27, 0x00	; 0
 460:	e5 e3       	ldi	r30, 0x35	; 53
 462:	f0 e0       	ldi	r31, 0x00	; 0
 464:	80 81       	ld	r24, Z
 466:	48 2f       	mov	r20, r24
 468:	8a 81       	ldd	r24, Y+2	; 0x02
 46a:	28 2f       	mov	r18, r24
 46c:	30 e0       	ldi	r19, 0x00	; 0
 46e:	81 e0       	ldi	r24, 0x01	; 1
 470:	90 e0       	ldi	r25, 0x00	; 0
 472:	02 2e       	mov	r0, r18
 474:	02 c0       	rjmp	.+4      	; 0x47a <MDIO_voidSetPinValue+0x1ba>
 476:	88 0f       	add	r24, r24
 478:	99 1f       	adc	r25, r25
 47a:	0a 94       	dec	r0
 47c:	e2 f7       	brpl	.-8      	; 0x476 <MDIO_voidSetPinValue+0x1b6>
 47e:	80 95       	com	r24
 480:	84 23       	and	r24, r20
 482:	8c 93       	st	X, r24
 484:	36 c0       	rjmp	.+108    	; 0x4f2 <MDIO_voidSetPinValue+0x232>
						}
						break;
			case PORTD:
						switch (A_u8PinValue)
 486:	8b 81       	ldd	r24, Y+3	; 0x03
 488:	28 2f       	mov	r18, r24
 48a:	30 e0       	ldi	r19, 0x00	; 0
 48c:	3d 83       	std	Y+5, r19	; 0x05
 48e:	2c 83       	std	Y+4, r18	; 0x04
 490:	8c 81       	ldd	r24, Y+4	; 0x04
 492:	9d 81       	ldd	r25, Y+5	; 0x05
 494:	00 97       	sbiw	r24, 0x00	; 0
 496:	c9 f0       	breq	.+50     	; 0x4ca <MDIO_voidSetPinValue+0x20a>
 498:	2c 81       	ldd	r18, Y+4	; 0x04
 49a:	3d 81       	ldd	r19, Y+5	; 0x05
 49c:	21 30       	cpi	r18, 0x01	; 1
 49e:	31 05       	cpc	r19, r1
 4a0:	41 f5       	brne	.+80     	; 0x4f2 <MDIO_voidSetPinValue+0x232>
						{
						case HIGH: SET_BIT(DIO_PORTD_REG,A_u8PinNo); break;
 4a2:	a2 e3       	ldi	r26, 0x32	; 50
 4a4:	b0 e0       	ldi	r27, 0x00	; 0
 4a6:	e2 e3       	ldi	r30, 0x32	; 50
 4a8:	f0 e0       	ldi	r31, 0x00	; 0
 4aa:	80 81       	ld	r24, Z
 4ac:	48 2f       	mov	r20, r24
 4ae:	8a 81       	ldd	r24, Y+2	; 0x02
 4b0:	28 2f       	mov	r18, r24
 4b2:	30 e0       	ldi	r19, 0x00	; 0
 4b4:	81 e0       	ldi	r24, 0x01	; 1
 4b6:	90 e0       	ldi	r25, 0x00	; 0
 4b8:	02 2e       	mov	r0, r18
 4ba:	02 c0       	rjmp	.+4      	; 0x4c0 <MDIO_voidSetPinValue+0x200>
 4bc:	88 0f       	add	r24, r24
 4be:	99 1f       	adc	r25, r25
 4c0:	0a 94       	dec	r0
 4c2:	e2 f7       	brpl	.-8      	; 0x4bc <MDIO_voidSetPinValue+0x1fc>
 4c4:	84 2b       	or	r24, r20
 4c6:	8c 93       	st	X, r24
 4c8:	14 c0       	rjmp	.+40     	; 0x4f2 <MDIO_voidSetPinValue+0x232>
						case LOW : CLR_BIT(DIO_PORTD_REG,A_u8PinNo); break;
 4ca:	a2 e3       	ldi	r26, 0x32	; 50
 4cc:	b0 e0       	ldi	r27, 0x00	; 0
 4ce:	e2 e3       	ldi	r30, 0x32	; 50
 4d0:	f0 e0       	ldi	r31, 0x00	; 0
 4d2:	80 81       	ld	r24, Z
 4d4:	48 2f       	mov	r20, r24
 4d6:	8a 81       	ldd	r24, Y+2	; 0x02
 4d8:	28 2f       	mov	r18, r24
 4da:	30 e0       	ldi	r19, 0x00	; 0
 4dc:	81 e0       	ldi	r24, 0x01	; 1
 4de:	90 e0       	ldi	r25, 0x00	; 0
 4e0:	02 2e       	mov	r0, r18
 4e2:	02 c0       	rjmp	.+4      	; 0x4e8 <MDIO_voidSetPinValue+0x228>
 4e4:	88 0f       	add	r24, r24
 4e6:	99 1f       	adc	r25, r25
 4e8:	0a 94       	dec	r0
 4ea:	e2 f7       	brpl	.-8      	; 0x4e4 <MDIO_voidSetPinValue+0x224>
 4ec:	80 95       	com	r24
 4ee:	84 23       	and	r24, r20
 4f0:	8c 93       	st	X, r24
						}
						break;
		}
	}
}
 4f2:	2d 96       	adiw	r28, 0x0d	; 13
 4f4:	0f b6       	in	r0, 0x3f	; 63
 4f6:	f8 94       	cli
 4f8:	de bf       	out	0x3e, r29	; 62
 4fa:	0f be       	out	0x3f, r0	; 63
 4fc:	cd bf       	out	0x3d, r28	; 61
 4fe:	cf 91       	pop	r28
 500:	df 91       	pop	r29
 502:	08 95       	ret

00000504 <MDIO_u8GetPinValue>:


u8   MDIO_u8GetPinValue(u8 A_u8PortNo, u8 A_u8PinNo)
{
 504:	df 93       	push	r29
 506:	cf 93       	push	r28
 508:	00 d0       	rcall	.+0      	; 0x50a <MDIO_u8GetPinValue+0x6>
 50a:	00 d0       	rcall	.+0      	; 0x50c <MDIO_u8GetPinValue+0x8>
 50c:	0f 92       	push	r0
 50e:	cd b7       	in	r28, 0x3d	; 61
 510:	de b7       	in	r29, 0x3e	; 62
 512:	8a 83       	std	Y+2, r24	; 0x02
 514:	6b 83       	std	Y+3, r22	; 0x03
	u8 local_u8PinValue=5;
 516:	85 e0       	ldi	r24, 0x05	; 5
 518:	89 83       	std	Y+1, r24	; 0x01
	if ( (A_u8PortNo<=PORTD) && (A_u8PinNo<=PIN7) )
 51a:	8a 81       	ldd	r24, Y+2	; 0x02
 51c:	84 30       	cpi	r24, 0x04	; 4
 51e:	08 f0       	brcs	.+2      	; 0x522 <MDIO_u8GetPinValue+0x1e>
 520:	6b c0       	rjmp	.+214    	; 0x5f8 <MDIO_u8GetPinValue+0xf4>
 522:	8b 81       	ldd	r24, Y+3	; 0x03
 524:	88 30       	cpi	r24, 0x08	; 8
 526:	08 f0       	brcs	.+2      	; 0x52a <MDIO_u8GetPinValue+0x26>
 528:	67 c0       	rjmp	.+206    	; 0x5f8 <MDIO_u8GetPinValue+0xf4>
		{
			switch (A_u8PortNo)
 52a:	8a 81       	ldd	r24, Y+2	; 0x02
 52c:	28 2f       	mov	r18, r24
 52e:	30 e0       	ldi	r19, 0x00	; 0
 530:	3d 83       	std	Y+5, r19	; 0x05
 532:	2c 83       	std	Y+4, r18	; 0x04
 534:	4c 81       	ldd	r20, Y+4	; 0x04
 536:	5d 81       	ldd	r21, Y+5	; 0x05
 538:	41 30       	cpi	r20, 0x01	; 1
 53a:	51 05       	cpc	r21, r1
 53c:	41 f1       	breq	.+80     	; 0x58e <MDIO_u8GetPinValue+0x8a>
 53e:	8c 81       	ldd	r24, Y+4	; 0x04
 540:	9d 81       	ldd	r25, Y+5	; 0x05
 542:	82 30       	cpi	r24, 0x02	; 2
 544:	91 05       	cpc	r25, r1
 546:	34 f4       	brge	.+12     	; 0x554 <MDIO_u8GetPinValue+0x50>
 548:	2c 81       	ldd	r18, Y+4	; 0x04
 54a:	3d 81       	ldd	r19, Y+5	; 0x05
 54c:	21 15       	cp	r18, r1
 54e:	31 05       	cpc	r19, r1
 550:	61 f0       	breq	.+24     	; 0x56a <MDIO_u8GetPinValue+0x66>
 552:	52 c0       	rjmp	.+164    	; 0x5f8 <MDIO_u8GetPinValue+0xf4>
 554:	4c 81       	ldd	r20, Y+4	; 0x04
 556:	5d 81       	ldd	r21, Y+5	; 0x05
 558:	42 30       	cpi	r20, 0x02	; 2
 55a:	51 05       	cpc	r21, r1
 55c:	51 f1       	breq	.+84     	; 0x5b2 <MDIO_u8GetPinValue+0xae>
 55e:	8c 81       	ldd	r24, Y+4	; 0x04
 560:	9d 81       	ldd	r25, Y+5	; 0x05
 562:	83 30       	cpi	r24, 0x03	; 3
 564:	91 05       	cpc	r25, r1
 566:	b9 f1       	breq	.+110    	; 0x5d6 <MDIO_u8GetPinValue+0xd2>
 568:	47 c0       	rjmp	.+142    	; 0x5f8 <MDIO_u8GetPinValue+0xf4>
			{
			 case PORTA: local_u8PinValue= GET_BIT(DIO_PINA_REG,A_u8PinNo);  break;
 56a:	e9 e3       	ldi	r30, 0x39	; 57
 56c:	f0 e0       	ldi	r31, 0x00	; 0
 56e:	80 81       	ld	r24, Z
 570:	28 2f       	mov	r18, r24
 572:	30 e0       	ldi	r19, 0x00	; 0
 574:	8b 81       	ldd	r24, Y+3	; 0x03
 576:	88 2f       	mov	r24, r24
 578:	90 e0       	ldi	r25, 0x00	; 0
 57a:	a9 01       	movw	r20, r18
 57c:	02 c0       	rjmp	.+4      	; 0x582 <MDIO_u8GetPinValue+0x7e>
 57e:	55 95       	asr	r21
 580:	47 95       	ror	r20
 582:	8a 95       	dec	r24
 584:	e2 f7       	brpl	.-8      	; 0x57e <MDIO_u8GetPinValue+0x7a>
 586:	ca 01       	movw	r24, r20
 588:	81 70       	andi	r24, 0x01	; 1
 58a:	89 83       	std	Y+1, r24	; 0x01
 58c:	35 c0       	rjmp	.+106    	; 0x5f8 <MDIO_u8GetPinValue+0xf4>
			 case PORTB: local_u8PinValue= GET_BIT(DIO_PINB_REG,A_u8PinNo);  break;
 58e:	e6 e3       	ldi	r30, 0x36	; 54
 590:	f0 e0       	ldi	r31, 0x00	; 0
 592:	80 81       	ld	r24, Z
 594:	28 2f       	mov	r18, r24
 596:	30 e0       	ldi	r19, 0x00	; 0
 598:	8b 81       	ldd	r24, Y+3	; 0x03
 59a:	88 2f       	mov	r24, r24
 59c:	90 e0       	ldi	r25, 0x00	; 0
 59e:	a9 01       	movw	r20, r18
 5a0:	02 c0       	rjmp	.+4      	; 0x5a6 <MDIO_u8GetPinValue+0xa2>
 5a2:	55 95       	asr	r21
 5a4:	47 95       	ror	r20
 5a6:	8a 95       	dec	r24
 5a8:	e2 f7       	brpl	.-8      	; 0x5a2 <MDIO_u8GetPinValue+0x9e>
 5aa:	ca 01       	movw	r24, r20
 5ac:	81 70       	andi	r24, 0x01	; 1
 5ae:	89 83       	std	Y+1, r24	; 0x01
 5b0:	23 c0       	rjmp	.+70     	; 0x5f8 <MDIO_u8GetPinValue+0xf4>
			 case PORTC: local_u8PinValue= GET_BIT(DIO_PINC_REG,A_u8PinNo);  break;
 5b2:	e3 e3       	ldi	r30, 0x33	; 51
 5b4:	f0 e0       	ldi	r31, 0x00	; 0
 5b6:	80 81       	ld	r24, Z
 5b8:	28 2f       	mov	r18, r24
 5ba:	30 e0       	ldi	r19, 0x00	; 0
 5bc:	8b 81       	ldd	r24, Y+3	; 0x03
 5be:	88 2f       	mov	r24, r24
 5c0:	90 e0       	ldi	r25, 0x00	; 0
 5c2:	a9 01       	movw	r20, r18
 5c4:	02 c0       	rjmp	.+4      	; 0x5ca <MDIO_u8GetPinValue+0xc6>
 5c6:	55 95       	asr	r21
 5c8:	47 95       	ror	r20
 5ca:	8a 95       	dec	r24
 5cc:	e2 f7       	brpl	.-8      	; 0x5c6 <MDIO_u8GetPinValue+0xc2>
 5ce:	ca 01       	movw	r24, r20
 5d0:	81 70       	andi	r24, 0x01	; 1
 5d2:	89 83       	std	Y+1, r24	; 0x01
 5d4:	11 c0       	rjmp	.+34     	; 0x5f8 <MDIO_u8GetPinValue+0xf4>
			 case PORTD: local_u8PinValue= GET_BIT(DIO_PIND_REG,A_u8PinNo);  break;
 5d6:	e0 e3       	ldi	r30, 0x30	; 48
 5d8:	f0 e0       	ldi	r31, 0x00	; 0
 5da:	80 81       	ld	r24, Z
 5dc:	28 2f       	mov	r18, r24
 5de:	30 e0       	ldi	r19, 0x00	; 0
 5e0:	8b 81       	ldd	r24, Y+3	; 0x03
 5e2:	88 2f       	mov	r24, r24
 5e4:	90 e0       	ldi	r25, 0x00	; 0
 5e6:	a9 01       	movw	r20, r18
 5e8:	02 c0       	rjmp	.+4      	; 0x5ee <MDIO_u8GetPinValue+0xea>
 5ea:	55 95       	asr	r21
 5ec:	47 95       	ror	r20
 5ee:	8a 95       	dec	r24
 5f0:	e2 f7       	brpl	.-8      	; 0x5ea <MDIO_u8GetPinValue+0xe6>
 5f2:	ca 01       	movw	r24, r20
 5f4:	81 70       	andi	r24, 0x01	; 1
 5f6:	89 83       	std	Y+1, r24	; 0x01
			}
		}

	return local_u8PinValue;
 5f8:	89 81       	ldd	r24, Y+1	; 0x01
}
 5fa:	0f 90       	pop	r0
 5fc:	0f 90       	pop	r0
 5fe:	0f 90       	pop	r0
 600:	0f 90       	pop	r0
 602:	0f 90       	pop	r0
 604:	cf 91       	pop	r28
 606:	df 91       	pop	r29
 608:	08 95       	ret

0000060a <MDIO_voidSetPortDirection>:



void MDIO_voidSetPortDirection(u8 A_u8PortNo,u8 A_u8PortDirection)
{
 60a:	df 93       	push	r29
 60c:	cf 93       	push	r28
 60e:	00 d0       	rcall	.+0      	; 0x610 <MDIO_voidSetPortDirection+0x6>
 610:	00 d0       	rcall	.+0      	; 0x612 <MDIO_voidSetPortDirection+0x8>
 612:	cd b7       	in	r28, 0x3d	; 61
 614:	de b7       	in	r29, 0x3e	; 62
 616:	89 83       	std	Y+1, r24	; 0x01
 618:	6a 83       	std	Y+2, r22	; 0x02
	if ( (A_u8PortNo<=PORTD) )
 61a:	89 81       	ldd	r24, Y+1	; 0x01
 61c:	84 30       	cpi	r24, 0x04	; 4
 61e:	90 f5       	brcc	.+100    	; 0x684 <MDIO_voidSetPortDirection+0x7a>
		{
			switch (A_u8PortNo)
 620:	89 81       	ldd	r24, Y+1	; 0x01
 622:	28 2f       	mov	r18, r24
 624:	30 e0       	ldi	r19, 0x00	; 0
 626:	3c 83       	std	Y+4, r19	; 0x04
 628:	2b 83       	std	Y+3, r18	; 0x03
 62a:	8b 81       	ldd	r24, Y+3	; 0x03
 62c:	9c 81       	ldd	r25, Y+4	; 0x04
 62e:	81 30       	cpi	r24, 0x01	; 1
 630:	91 05       	cpc	r25, r1
 632:	d1 f0       	breq	.+52     	; 0x668 <MDIO_voidSetPortDirection+0x5e>
 634:	2b 81       	ldd	r18, Y+3	; 0x03
 636:	3c 81       	ldd	r19, Y+4	; 0x04
 638:	22 30       	cpi	r18, 0x02	; 2
 63a:	31 05       	cpc	r19, r1
 63c:	2c f4       	brge	.+10     	; 0x648 <MDIO_voidSetPortDirection+0x3e>
 63e:	8b 81       	ldd	r24, Y+3	; 0x03
 640:	9c 81       	ldd	r25, Y+4	; 0x04
 642:	00 97       	sbiw	r24, 0x00	; 0
 644:	61 f0       	breq	.+24     	; 0x65e <MDIO_voidSetPortDirection+0x54>
 646:	1e c0       	rjmp	.+60     	; 0x684 <MDIO_voidSetPortDirection+0x7a>
 648:	2b 81       	ldd	r18, Y+3	; 0x03
 64a:	3c 81       	ldd	r19, Y+4	; 0x04
 64c:	22 30       	cpi	r18, 0x02	; 2
 64e:	31 05       	cpc	r19, r1
 650:	81 f0       	breq	.+32     	; 0x672 <MDIO_voidSetPortDirection+0x68>
 652:	8b 81       	ldd	r24, Y+3	; 0x03
 654:	9c 81       	ldd	r25, Y+4	; 0x04
 656:	83 30       	cpi	r24, 0x03	; 3
 658:	91 05       	cpc	r25, r1
 65a:	81 f0       	breq	.+32     	; 0x67c <MDIO_voidSetPortDirection+0x72>
 65c:	13 c0       	rjmp	.+38     	; 0x684 <MDIO_voidSetPortDirection+0x7a>
			{
			 case PORTA: DIO_DDRA_REG= A_u8PortDirection;  break;
 65e:	ea e3       	ldi	r30, 0x3A	; 58
 660:	f0 e0       	ldi	r31, 0x00	; 0
 662:	8a 81       	ldd	r24, Y+2	; 0x02
 664:	80 83       	st	Z, r24
 666:	0e c0       	rjmp	.+28     	; 0x684 <MDIO_voidSetPortDirection+0x7a>
			 case PORTB: DIO_DDRB_REG= A_u8PortDirection;  break;
 668:	e7 e3       	ldi	r30, 0x37	; 55
 66a:	f0 e0       	ldi	r31, 0x00	; 0
 66c:	8a 81       	ldd	r24, Y+2	; 0x02
 66e:	80 83       	st	Z, r24
 670:	09 c0       	rjmp	.+18     	; 0x684 <MDIO_voidSetPortDirection+0x7a>
			 case PORTC: DIO_DDRC_REG= A_u8PortDirection;  break;
 672:	e4 e3       	ldi	r30, 0x34	; 52
 674:	f0 e0       	ldi	r31, 0x00	; 0
 676:	8a 81       	ldd	r24, Y+2	; 0x02
 678:	80 83       	st	Z, r24
 67a:	04 c0       	rjmp	.+8      	; 0x684 <MDIO_voidSetPortDirection+0x7a>
			 case PORTD: DIO_DDRD_REG= A_u8PortDirection;  break;
 67c:	e1 e3       	ldi	r30, 0x31	; 49
 67e:	f0 e0       	ldi	r31, 0x00	; 0
 680:	8a 81       	ldd	r24, Y+2	; 0x02
 682:	80 83       	st	Z, r24
			}
		}

}
 684:	0f 90       	pop	r0
 686:	0f 90       	pop	r0
 688:	0f 90       	pop	r0
 68a:	0f 90       	pop	r0
 68c:	cf 91       	pop	r28
 68e:	df 91       	pop	r29
 690:	08 95       	ret

00000692 <MDIO_voidSetPortValue>:

void MDIO_voidSetPortValue    (u8 A_u8PortNo,u8 A_u8PortValue)
{
 692:	df 93       	push	r29
 694:	cf 93       	push	r28
 696:	00 d0       	rcall	.+0      	; 0x698 <MDIO_voidSetPortValue+0x6>
 698:	00 d0       	rcall	.+0      	; 0x69a <MDIO_voidSetPortValue+0x8>
 69a:	cd b7       	in	r28, 0x3d	; 61
 69c:	de b7       	in	r29, 0x3e	; 62
 69e:	89 83       	std	Y+1, r24	; 0x01
 6a0:	6a 83       	std	Y+2, r22	; 0x02
	if ( (A_u8PortNo<=PORTD) )
 6a2:	89 81       	ldd	r24, Y+1	; 0x01
 6a4:	84 30       	cpi	r24, 0x04	; 4
 6a6:	90 f5       	brcc	.+100    	; 0x70c <MDIO_voidSetPortValue+0x7a>
			{
				switch (A_u8PortNo)
 6a8:	89 81       	ldd	r24, Y+1	; 0x01
 6aa:	28 2f       	mov	r18, r24
 6ac:	30 e0       	ldi	r19, 0x00	; 0
 6ae:	3c 83       	std	Y+4, r19	; 0x04
 6b0:	2b 83       	std	Y+3, r18	; 0x03
 6b2:	8b 81       	ldd	r24, Y+3	; 0x03
 6b4:	9c 81       	ldd	r25, Y+4	; 0x04
 6b6:	81 30       	cpi	r24, 0x01	; 1
 6b8:	91 05       	cpc	r25, r1
 6ba:	d1 f0       	breq	.+52     	; 0x6f0 <MDIO_voidSetPortValue+0x5e>
 6bc:	2b 81       	ldd	r18, Y+3	; 0x03
 6be:	3c 81       	ldd	r19, Y+4	; 0x04
 6c0:	22 30       	cpi	r18, 0x02	; 2
 6c2:	31 05       	cpc	r19, r1
 6c4:	2c f4       	brge	.+10     	; 0x6d0 <MDIO_voidSetPortValue+0x3e>
 6c6:	8b 81       	ldd	r24, Y+3	; 0x03
 6c8:	9c 81       	ldd	r25, Y+4	; 0x04
 6ca:	00 97       	sbiw	r24, 0x00	; 0
 6cc:	61 f0       	breq	.+24     	; 0x6e6 <MDIO_voidSetPortValue+0x54>
 6ce:	1e c0       	rjmp	.+60     	; 0x70c <MDIO_voidSetPortValue+0x7a>
 6d0:	2b 81       	ldd	r18, Y+3	; 0x03
 6d2:	3c 81       	ldd	r19, Y+4	; 0x04
 6d4:	22 30       	cpi	r18, 0x02	; 2
 6d6:	31 05       	cpc	r19, r1
 6d8:	81 f0       	breq	.+32     	; 0x6fa <MDIO_voidSetPortValue+0x68>
 6da:	8b 81       	ldd	r24, Y+3	; 0x03
 6dc:	9c 81       	ldd	r25, Y+4	; 0x04
 6de:	83 30       	cpi	r24, 0x03	; 3
 6e0:	91 05       	cpc	r25, r1
 6e2:	81 f0       	breq	.+32     	; 0x704 <MDIO_voidSetPortValue+0x72>
 6e4:	13 c0       	rjmp	.+38     	; 0x70c <MDIO_voidSetPortValue+0x7a>
				{
				 case PORTA: DIO_PORTA_REG= A_u8PortValue;  break;
 6e6:	eb e3       	ldi	r30, 0x3B	; 59
 6e8:	f0 e0       	ldi	r31, 0x00	; 0
 6ea:	8a 81       	ldd	r24, Y+2	; 0x02
 6ec:	80 83       	st	Z, r24
 6ee:	0e c0       	rjmp	.+28     	; 0x70c <MDIO_voidSetPortValue+0x7a>
				 case PORTB: DIO_PORTB_REG= A_u8PortValue;  break;
 6f0:	e8 e3       	ldi	r30, 0x38	; 56
 6f2:	f0 e0       	ldi	r31, 0x00	; 0
 6f4:	8a 81       	ldd	r24, Y+2	; 0x02
 6f6:	80 83       	st	Z, r24
 6f8:	09 c0       	rjmp	.+18     	; 0x70c <MDIO_voidSetPortValue+0x7a>
				 case PORTC: DIO_PORTC_REG= A_u8PortValue;  break;
 6fa:	e5 e3       	ldi	r30, 0x35	; 53
 6fc:	f0 e0       	ldi	r31, 0x00	; 0
 6fe:	8a 81       	ldd	r24, Y+2	; 0x02
 700:	80 83       	st	Z, r24
 702:	04 c0       	rjmp	.+8      	; 0x70c <MDIO_voidSetPortValue+0x7a>
				 case PORTD: DIO_PORTD_REG= A_u8PortValue;  break;
 704:	e2 e3       	ldi	r30, 0x32	; 50
 706:	f0 e0       	ldi	r31, 0x00	; 0
 708:	8a 81       	ldd	r24, Y+2	; 0x02
 70a:	80 83       	st	Z, r24
				}
			}
}
 70c:	0f 90       	pop	r0
 70e:	0f 90       	pop	r0
 710:	0f 90       	pop	r0
 712:	0f 90       	pop	r0
 714:	cf 91       	pop	r28
 716:	df 91       	pop	r29
 718:	08 95       	ret

0000071a <MEXTI_voidSenseControl>:




void MEXTI_voidSenseControl (u8 A_u8EXTI_Line, u8 A_u8EXTI_Sense)
{
 71a:	df 93       	push	r29
 71c:	cf 93       	push	r28
 71e:	cd b7       	in	r28, 0x3d	; 61
 720:	de b7       	in	r29, 0x3e	; 62
 722:	2a 97       	sbiw	r28, 0x0a	; 10
 724:	0f b6       	in	r0, 0x3f	; 63
 726:	f8 94       	cli
 728:	de bf       	out	0x3e, r29	; 62
 72a:	0f be       	out	0x3f, r0	; 63
 72c:	cd bf       	out	0x3d, r28	; 61
 72e:	89 83       	std	Y+1, r24	; 0x01
 730:	6a 83       	std	Y+2, r22	; 0x02
	switch (A_u8EXTI_Line)
 732:	89 81       	ldd	r24, Y+1	; 0x01
 734:	28 2f       	mov	r18, r24
 736:	30 e0       	ldi	r19, 0x00	; 0
 738:	3a 87       	std	Y+10, r19	; 0x0a
 73a:	29 87       	std	Y+9, r18	; 0x09
 73c:	89 85       	ldd	r24, Y+9	; 0x09
 73e:	9a 85       	ldd	r25, Y+10	; 0x0a
 740:	81 30       	cpi	r24, 0x01	; 1
 742:	91 05       	cpc	r25, r1
 744:	09 f4       	brne	.+2      	; 0x748 <MEXTI_voidSenseControl+0x2e>
 746:	66 c0       	rjmp	.+204    	; 0x814 <MEXTI_voidSenseControl+0xfa>
 748:	29 85       	ldd	r18, Y+9	; 0x09
 74a:	3a 85       	ldd	r19, Y+10	; 0x0a
 74c:	22 30       	cpi	r18, 0x02	; 2
 74e:	31 05       	cpc	r19, r1
 750:	09 f4       	brne	.+2      	; 0x754 <MEXTI_voidSenseControl+0x3a>
 752:	bb c0       	rjmp	.+374    	; 0x8ca <__stack+0x6b>
 754:	89 85       	ldd	r24, Y+9	; 0x09
 756:	9a 85       	ldd	r25, Y+10	; 0x0a
 758:	00 97       	sbiw	r24, 0x00	; 0
 75a:	09 f0       	breq	.+2      	; 0x75e <MEXTI_voidSenseControl+0x44>
 75c:	d5 c0       	rjmp	.+426    	; 0x908 <__stack+0xa9>
	{
		case EXTI_LINE0:
						switch (A_u8EXTI_Sense)
 75e:	8a 81       	ldd	r24, Y+2	; 0x02
 760:	28 2f       	mov	r18, r24
 762:	30 e0       	ldi	r19, 0x00	; 0
 764:	38 87       	std	Y+8, r19	; 0x08
 766:	2f 83       	std	Y+7, r18	; 0x07
 768:	8f 81       	ldd	r24, Y+7	; 0x07
 76a:	98 85       	ldd	r25, Y+8	; 0x08
 76c:	81 30       	cpi	r24, 0x01	; 1
 76e:	91 05       	cpc	r25, r1
 770:	21 f1       	breq	.+72     	; 0x7ba <MEXTI_voidSenseControl+0xa0>
 772:	2f 81       	ldd	r18, Y+7	; 0x07
 774:	38 85       	ldd	r19, Y+8	; 0x08
 776:	22 30       	cpi	r18, 0x02	; 2
 778:	31 05       	cpc	r19, r1
 77a:	2c f4       	brge	.+10     	; 0x786 <MEXTI_voidSenseControl+0x6c>
 77c:	8f 81       	ldd	r24, Y+7	; 0x07
 77e:	98 85       	ldd	r25, Y+8	; 0x08
 780:	00 97       	sbiw	r24, 0x00	; 0
 782:	61 f0       	breq	.+24     	; 0x79c <MEXTI_voidSenseControl+0x82>
 784:	c1 c0       	rjmp	.+386    	; 0x908 <__stack+0xa9>
 786:	2f 81       	ldd	r18, Y+7	; 0x07
 788:	38 85       	ldd	r19, Y+8	; 0x08
 78a:	22 30       	cpi	r18, 0x02	; 2
 78c:	31 05       	cpc	r19, r1
 78e:	21 f1       	breq	.+72     	; 0x7d8 <MEXTI_voidSenseControl+0xbe>
 790:	8f 81       	ldd	r24, Y+7	; 0x07
 792:	98 85       	ldd	r25, Y+8	; 0x08
 794:	83 30       	cpi	r24, 0x03	; 3
 796:	91 05       	cpc	r25, r1
 798:	71 f1       	breq	.+92     	; 0x7f6 <MEXTI_voidSenseControl+0xdc>
 79a:	b6 c0       	rjmp	.+364    	; 0x908 <__stack+0xa9>
						{
							case EXTI_LOWLEVEL:
												CLR_BIT(EXTI_MCUCR_REG,0);
 79c:	a5 e5       	ldi	r26, 0x55	; 85
 79e:	b0 e0       	ldi	r27, 0x00	; 0
 7a0:	e5 e5       	ldi	r30, 0x55	; 85
 7a2:	f0 e0       	ldi	r31, 0x00	; 0
 7a4:	80 81       	ld	r24, Z
 7a6:	8e 7f       	andi	r24, 0xFE	; 254
 7a8:	8c 93       	st	X, r24
												CLR_BIT(EXTI_MCUCR_REG,1);
 7aa:	a5 e5       	ldi	r26, 0x55	; 85
 7ac:	b0 e0       	ldi	r27, 0x00	; 0
 7ae:	e5 e5       	ldi	r30, 0x55	; 85
 7b0:	f0 e0       	ldi	r31, 0x00	; 0
 7b2:	80 81       	ld	r24, Z
 7b4:	8d 7f       	andi	r24, 0xFD	; 253
 7b6:	8c 93       	st	X, r24
 7b8:	a7 c0       	rjmp	.+334    	; 0x908 <__stack+0xa9>
												break;
							case EXTI_ONCHANGE:
												SET_BIT(EXTI_MCUCR_REG,0);
 7ba:	a5 e5       	ldi	r26, 0x55	; 85
 7bc:	b0 e0       	ldi	r27, 0x00	; 0
 7be:	e5 e5       	ldi	r30, 0x55	; 85
 7c0:	f0 e0       	ldi	r31, 0x00	; 0
 7c2:	80 81       	ld	r24, Z
 7c4:	81 60       	ori	r24, 0x01	; 1
 7c6:	8c 93       	st	X, r24
												CLR_BIT(EXTI_MCUCR_REG,1);
 7c8:	a5 e5       	ldi	r26, 0x55	; 85
 7ca:	b0 e0       	ldi	r27, 0x00	; 0
 7cc:	e5 e5       	ldi	r30, 0x55	; 85
 7ce:	f0 e0       	ldi	r31, 0x00	; 0
 7d0:	80 81       	ld	r24, Z
 7d2:	8d 7f       	andi	r24, 0xFD	; 253
 7d4:	8c 93       	st	X, r24
 7d6:	98 c0       	rjmp	.+304    	; 0x908 <__stack+0xa9>
												break;
							case EXTI_FALLING:
												CLR_BIT(EXTI_MCUCR_REG,0);
 7d8:	a5 e5       	ldi	r26, 0x55	; 85
 7da:	b0 e0       	ldi	r27, 0x00	; 0
 7dc:	e5 e5       	ldi	r30, 0x55	; 85
 7de:	f0 e0       	ldi	r31, 0x00	; 0
 7e0:	80 81       	ld	r24, Z
 7e2:	8e 7f       	andi	r24, 0xFE	; 254
 7e4:	8c 93       	st	X, r24
												SET_BIT(EXTI_MCUCR_REG,1);
 7e6:	a5 e5       	ldi	r26, 0x55	; 85
 7e8:	b0 e0       	ldi	r27, 0x00	; 0
 7ea:	e5 e5       	ldi	r30, 0x55	; 85
 7ec:	f0 e0       	ldi	r31, 0x00	; 0
 7ee:	80 81       	ld	r24, Z
 7f0:	82 60       	ori	r24, 0x02	; 2
 7f2:	8c 93       	st	X, r24
 7f4:	89 c0       	rjmp	.+274    	; 0x908 <__stack+0xa9>
												break;
							case EXTI_RISING:
												SET_BIT(EXTI_MCUCR_REG,0);
 7f6:	a5 e5       	ldi	r26, 0x55	; 85
 7f8:	b0 e0       	ldi	r27, 0x00	; 0
 7fa:	e5 e5       	ldi	r30, 0x55	; 85
 7fc:	f0 e0       	ldi	r31, 0x00	; 0
 7fe:	80 81       	ld	r24, Z
 800:	81 60       	ori	r24, 0x01	; 1
 802:	8c 93       	st	X, r24
												SET_BIT(EXTI_MCUCR_REG,1);
 804:	a5 e5       	ldi	r26, 0x55	; 85
 806:	b0 e0       	ldi	r27, 0x00	; 0
 808:	e5 e5       	ldi	r30, 0x55	; 85
 80a:	f0 e0       	ldi	r31, 0x00	; 0
 80c:	80 81       	ld	r24, Z
 80e:	82 60       	ori	r24, 0x02	; 2
 810:	8c 93       	st	X, r24
 812:	7a c0       	rjmp	.+244    	; 0x908 <__stack+0xa9>
												break;
						}
						break;
		case EXTI_LINE1:
						switch (A_u8EXTI_Sense)
 814:	8a 81       	ldd	r24, Y+2	; 0x02
 816:	28 2f       	mov	r18, r24
 818:	30 e0       	ldi	r19, 0x00	; 0
 81a:	3e 83       	std	Y+6, r19	; 0x06
 81c:	2d 83       	std	Y+5, r18	; 0x05
 81e:	8d 81       	ldd	r24, Y+5	; 0x05
 820:	9e 81       	ldd	r25, Y+6	; 0x06
 822:	81 30       	cpi	r24, 0x01	; 1
 824:	91 05       	cpc	r25, r1
 826:	21 f1       	breq	.+72     	; 0x870 <__stack+0x11>
 828:	2d 81       	ldd	r18, Y+5	; 0x05
 82a:	3e 81       	ldd	r19, Y+6	; 0x06
 82c:	22 30       	cpi	r18, 0x02	; 2
 82e:	31 05       	cpc	r19, r1
 830:	2c f4       	brge	.+10     	; 0x83c <MEXTI_voidSenseControl+0x122>
 832:	8d 81       	ldd	r24, Y+5	; 0x05
 834:	9e 81       	ldd	r25, Y+6	; 0x06
 836:	00 97       	sbiw	r24, 0x00	; 0
 838:	61 f0       	breq	.+24     	; 0x852 <MEXTI_voidSenseControl+0x138>
 83a:	66 c0       	rjmp	.+204    	; 0x908 <__stack+0xa9>
 83c:	2d 81       	ldd	r18, Y+5	; 0x05
 83e:	3e 81       	ldd	r19, Y+6	; 0x06
 840:	22 30       	cpi	r18, 0x02	; 2
 842:	31 05       	cpc	r19, r1
 844:	21 f1       	breq	.+72     	; 0x88e <__stack+0x2f>
 846:	8d 81       	ldd	r24, Y+5	; 0x05
 848:	9e 81       	ldd	r25, Y+6	; 0x06
 84a:	83 30       	cpi	r24, 0x03	; 3
 84c:	91 05       	cpc	r25, r1
 84e:	71 f1       	breq	.+92     	; 0x8ac <__stack+0x4d>
 850:	5b c0       	rjmp	.+182    	; 0x908 <__stack+0xa9>
						{
							case EXTI_LOWLEVEL:
												CLR_BIT(EXTI_MCUCR_REG,2);
 852:	a5 e5       	ldi	r26, 0x55	; 85
 854:	b0 e0       	ldi	r27, 0x00	; 0
 856:	e5 e5       	ldi	r30, 0x55	; 85
 858:	f0 e0       	ldi	r31, 0x00	; 0
 85a:	80 81       	ld	r24, Z
 85c:	8b 7f       	andi	r24, 0xFB	; 251
 85e:	8c 93       	st	X, r24
												CLR_BIT(EXTI_MCUCR_REG,3);
 860:	a5 e5       	ldi	r26, 0x55	; 85
 862:	b0 e0       	ldi	r27, 0x00	; 0
 864:	e5 e5       	ldi	r30, 0x55	; 85
 866:	f0 e0       	ldi	r31, 0x00	; 0
 868:	80 81       	ld	r24, Z
 86a:	87 7f       	andi	r24, 0xF7	; 247
 86c:	8c 93       	st	X, r24
 86e:	4c c0       	rjmp	.+152    	; 0x908 <__stack+0xa9>
												break;
							case EXTI_ONCHANGE:
												SET_BIT(EXTI_MCUCR_REG,2);
 870:	a5 e5       	ldi	r26, 0x55	; 85
 872:	b0 e0       	ldi	r27, 0x00	; 0
 874:	e5 e5       	ldi	r30, 0x55	; 85
 876:	f0 e0       	ldi	r31, 0x00	; 0
 878:	80 81       	ld	r24, Z
 87a:	84 60       	ori	r24, 0x04	; 4
 87c:	8c 93       	st	X, r24
												CLR_BIT(EXTI_MCUCR_REG,3);
 87e:	a5 e5       	ldi	r26, 0x55	; 85
 880:	b0 e0       	ldi	r27, 0x00	; 0
 882:	e5 e5       	ldi	r30, 0x55	; 85
 884:	f0 e0       	ldi	r31, 0x00	; 0
 886:	80 81       	ld	r24, Z
 888:	87 7f       	andi	r24, 0xF7	; 247
 88a:	8c 93       	st	X, r24
 88c:	3d c0       	rjmp	.+122    	; 0x908 <__stack+0xa9>
												break;
							case EXTI_FALLING:
												CLR_BIT(EXTI_MCUCR_REG,2);
 88e:	a5 e5       	ldi	r26, 0x55	; 85
 890:	b0 e0       	ldi	r27, 0x00	; 0
 892:	e5 e5       	ldi	r30, 0x55	; 85
 894:	f0 e0       	ldi	r31, 0x00	; 0
 896:	80 81       	ld	r24, Z
 898:	8b 7f       	andi	r24, 0xFB	; 251
 89a:	8c 93       	st	X, r24
												SET_BIT(EXTI_MCUCR_REG,3);
 89c:	a5 e5       	ldi	r26, 0x55	; 85
 89e:	b0 e0       	ldi	r27, 0x00	; 0
 8a0:	e5 e5       	ldi	r30, 0x55	; 85
 8a2:	f0 e0       	ldi	r31, 0x00	; 0
 8a4:	80 81       	ld	r24, Z
 8a6:	88 60       	ori	r24, 0x08	; 8
 8a8:	8c 93       	st	X, r24
 8aa:	2e c0       	rjmp	.+92     	; 0x908 <__stack+0xa9>
												break;
							case EXTI_RISING:
												SET_BIT(EXTI_MCUCR_REG,2);
 8ac:	a5 e5       	ldi	r26, 0x55	; 85
 8ae:	b0 e0       	ldi	r27, 0x00	; 0
 8b0:	e5 e5       	ldi	r30, 0x55	; 85
 8b2:	f0 e0       	ldi	r31, 0x00	; 0
 8b4:	80 81       	ld	r24, Z
 8b6:	84 60       	ori	r24, 0x04	; 4
 8b8:	8c 93       	st	X, r24
												SET_BIT(EXTI_MCUCR_REG,3);
 8ba:	a5 e5       	ldi	r26, 0x55	; 85
 8bc:	b0 e0       	ldi	r27, 0x00	; 0
 8be:	e5 e5       	ldi	r30, 0x55	; 85
 8c0:	f0 e0       	ldi	r31, 0x00	; 0
 8c2:	80 81       	ld	r24, Z
 8c4:	88 60       	ori	r24, 0x08	; 8
 8c6:	8c 93       	st	X, r24
 8c8:	1f c0       	rjmp	.+62     	; 0x908 <__stack+0xa9>
												break;
						}
						break;
		case EXTI_LINE2:
						switch (A_u8EXTI_Sense)
 8ca:	8a 81       	ldd	r24, Y+2	; 0x02
 8cc:	28 2f       	mov	r18, r24
 8ce:	30 e0       	ldi	r19, 0x00	; 0
 8d0:	3c 83       	std	Y+4, r19	; 0x04
 8d2:	2b 83       	std	Y+3, r18	; 0x03
 8d4:	8b 81       	ldd	r24, Y+3	; 0x03
 8d6:	9c 81       	ldd	r25, Y+4	; 0x04
 8d8:	82 30       	cpi	r24, 0x02	; 2
 8da:	91 05       	cpc	r25, r1
 8dc:	31 f0       	breq	.+12     	; 0x8ea <__stack+0x8b>
 8de:	2b 81       	ldd	r18, Y+3	; 0x03
 8e0:	3c 81       	ldd	r19, Y+4	; 0x04
 8e2:	23 30       	cpi	r18, 0x03	; 3
 8e4:	31 05       	cpc	r19, r1
 8e6:	49 f0       	breq	.+18     	; 0x8fa <__stack+0x9b>
 8e8:	0f c0       	rjmp	.+30     	; 0x908 <__stack+0xa9>
						{

							case EXTI_FALLING:
												CLR_BIT(EXTI_MCUCSR_REG,6);
 8ea:	a4 e5       	ldi	r26, 0x54	; 84
 8ec:	b0 e0       	ldi	r27, 0x00	; 0
 8ee:	e4 e5       	ldi	r30, 0x54	; 84
 8f0:	f0 e0       	ldi	r31, 0x00	; 0
 8f2:	80 81       	ld	r24, Z
 8f4:	8f 7b       	andi	r24, 0xBF	; 191
 8f6:	8c 93       	st	X, r24
 8f8:	07 c0       	rjmp	.+14     	; 0x908 <__stack+0xa9>
												break;
							case EXTI_RISING:
												SET_BIT(EXTI_MCUCSR_REG,6);
 8fa:	a4 e5       	ldi	r26, 0x54	; 84
 8fc:	b0 e0       	ldi	r27, 0x00	; 0
 8fe:	e4 e5       	ldi	r30, 0x54	; 84
 900:	f0 e0       	ldi	r31, 0x00	; 0
 902:	80 81       	ld	r24, Z
 904:	80 64       	ori	r24, 0x40	; 64
 906:	8c 93       	st	X, r24
												break;
						}
						break;
	}
}
 908:	2a 96       	adiw	r28, 0x0a	; 10
 90a:	0f b6       	in	r0, 0x3f	; 63
 90c:	f8 94       	cli
 90e:	de bf       	out	0x3e, r29	; 62
 910:	0f be       	out	0x3f, r0	; 63
 912:	cd bf       	out	0x3d, r28	; 61
 914:	cf 91       	pop	r28
 916:	df 91       	pop	r29
 918:	08 95       	ret

0000091a <MEXTI_voidEnable>:
void MEXTI_voidEnable (u8 A_u8EXTI_Line)
{
 91a:	df 93       	push	r29
 91c:	cf 93       	push	r28
 91e:	00 d0       	rcall	.+0      	; 0x920 <MEXTI_voidEnable+0x6>
 920:	0f 92       	push	r0
 922:	cd b7       	in	r28, 0x3d	; 61
 924:	de b7       	in	r29, 0x3e	; 62
 926:	89 83       	std	Y+1, r24	; 0x01
	switch (A_u8EXTI_Line)
 928:	89 81       	ldd	r24, Y+1	; 0x01
 92a:	28 2f       	mov	r18, r24
 92c:	30 e0       	ldi	r19, 0x00	; 0
 92e:	3b 83       	std	Y+3, r19	; 0x03
 930:	2a 83       	std	Y+2, r18	; 0x02
 932:	8a 81       	ldd	r24, Y+2	; 0x02
 934:	9b 81       	ldd	r25, Y+3	; 0x03
 936:	81 30       	cpi	r24, 0x01	; 1
 938:	91 05       	cpc	r25, r1
 93a:	89 f0       	breq	.+34     	; 0x95e <MEXTI_voidEnable+0x44>
 93c:	2a 81       	ldd	r18, Y+2	; 0x02
 93e:	3b 81       	ldd	r19, Y+3	; 0x03
 940:	22 30       	cpi	r18, 0x02	; 2
 942:	31 05       	cpc	r19, r1
 944:	a1 f0       	breq	.+40     	; 0x96e <MEXTI_voidEnable+0x54>
 946:	8a 81       	ldd	r24, Y+2	; 0x02
 948:	9b 81       	ldd	r25, Y+3	; 0x03
 94a:	00 97       	sbiw	r24, 0x00	; 0
 94c:	b9 f4       	brne	.+46     	; 0x97c <MEXTI_voidEnable+0x62>
		{
			case EXTI_LINE0: SET_BIT(EXTI_GICR_REG,6); break;
 94e:	ab e5       	ldi	r26, 0x5B	; 91
 950:	b0 e0       	ldi	r27, 0x00	; 0
 952:	eb e5       	ldi	r30, 0x5B	; 91
 954:	f0 e0       	ldi	r31, 0x00	; 0
 956:	80 81       	ld	r24, Z
 958:	80 64       	ori	r24, 0x40	; 64
 95a:	8c 93       	st	X, r24
 95c:	0f c0       	rjmp	.+30     	; 0x97c <MEXTI_voidEnable+0x62>
			case EXTI_LINE1: SET_BIT(EXTI_GICR_REG,7); break;
 95e:	ab e5       	ldi	r26, 0x5B	; 91
 960:	b0 e0       	ldi	r27, 0x00	; 0
 962:	eb e5       	ldi	r30, 0x5B	; 91
 964:	f0 e0       	ldi	r31, 0x00	; 0
 966:	80 81       	ld	r24, Z
 968:	80 68       	ori	r24, 0x80	; 128
 96a:	8c 93       	st	X, r24
 96c:	07 c0       	rjmp	.+14     	; 0x97c <MEXTI_voidEnable+0x62>
			case EXTI_LINE2: SET_BIT(EXTI_GICR_REG,5); break;
 96e:	ab e5       	ldi	r26, 0x5B	; 91
 970:	b0 e0       	ldi	r27, 0x00	; 0
 972:	eb e5       	ldi	r30, 0x5B	; 91
 974:	f0 e0       	ldi	r31, 0x00	; 0
 976:	80 81       	ld	r24, Z
 978:	80 62       	ori	r24, 0x20	; 32
 97a:	8c 93       	st	X, r24
		}
}
 97c:	0f 90       	pop	r0
 97e:	0f 90       	pop	r0
 980:	0f 90       	pop	r0
 982:	cf 91       	pop	r28
 984:	df 91       	pop	r29
 986:	08 95       	ret

00000988 <MEXTI_voidDisable>:
void MEXTI_voidDisable (u8 A_u8EXTI_Line)
{
 988:	df 93       	push	r29
 98a:	cf 93       	push	r28
 98c:	00 d0       	rcall	.+0      	; 0x98e <MEXTI_voidDisable+0x6>
 98e:	0f 92       	push	r0
 990:	cd b7       	in	r28, 0x3d	; 61
 992:	de b7       	in	r29, 0x3e	; 62
 994:	89 83       	std	Y+1, r24	; 0x01
	switch (A_u8EXTI_Line)
 996:	89 81       	ldd	r24, Y+1	; 0x01
 998:	28 2f       	mov	r18, r24
 99a:	30 e0       	ldi	r19, 0x00	; 0
 99c:	3b 83       	std	Y+3, r19	; 0x03
 99e:	2a 83       	std	Y+2, r18	; 0x02
 9a0:	8a 81       	ldd	r24, Y+2	; 0x02
 9a2:	9b 81       	ldd	r25, Y+3	; 0x03
 9a4:	81 30       	cpi	r24, 0x01	; 1
 9a6:	91 05       	cpc	r25, r1
 9a8:	89 f0       	breq	.+34     	; 0x9cc <MEXTI_voidDisable+0x44>
 9aa:	2a 81       	ldd	r18, Y+2	; 0x02
 9ac:	3b 81       	ldd	r19, Y+3	; 0x03
 9ae:	22 30       	cpi	r18, 0x02	; 2
 9b0:	31 05       	cpc	r19, r1
 9b2:	a1 f0       	breq	.+40     	; 0x9dc <MEXTI_voidDisable+0x54>
 9b4:	8a 81       	ldd	r24, Y+2	; 0x02
 9b6:	9b 81       	ldd	r25, Y+3	; 0x03
 9b8:	00 97       	sbiw	r24, 0x00	; 0
 9ba:	b9 f4       	brne	.+46     	; 0x9ea <MEXTI_voidDisable+0x62>
			{
			case EXTI_LINE0: CLR_BIT(EXTI_GICR_REG,6); break;
 9bc:	ab e5       	ldi	r26, 0x5B	; 91
 9be:	b0 e0       	ldi	r27, 0x00	; 0
 9c0:	eb e5       	ldi	r30, 0x5B	; 91
 9c2:	f0 e0       	ldi	r31, 0x00	; 0
 9c4:	80 81       	ld	r24, Z
 9c6:	8f 7b       	andi	r24, 0xBF	; 191
 9c8:	8c 93       	st	X, r24
 9ca:	0f c0       	rjmp	.+30     	; 0x9ea <MEXTI_voidDisable+0x62>
			case EXTI_LINE1: CLR_BIT(EXTI_GICR_REG,7); break;
 9cc:	ab e5       	ldi	r26, 0x5B	; 91
 9ce:	b0 e0       	ldi	r27, 0x00	; 0
 9d0:	eb e5       	ldi	r30, 0x5B	; 91
 9d2:	f0 e0       	ldi	r31, 0x00	; 0
 9d4:	80 81       	ld	r24, Z
 9d6:	8f 77       	andi	r24, 0x7F	; 127
 9d8:	8c 93       	st	X, r24
 9da:	07 c0       	rjmp	.+14     	; 0x9ea <MEXTI_voidDisable+0x62>
			case EXTI_LINE2: CLR_BIT(EXTI_GICR_REG,5); break;
 9dc:	ab e5       	ldi	r26, 0x5B	; 91
 9de:	b0 e0       	ldi	r27, 0x00	; 0
 9e0:	eb e5       	ldi	r30, 0x5B	; 91
 9e2:	f0 e0       	ldi	r31, 0x00	; 0
 9e4:	80 81       	ld	r24, Z
 9e6:	8f 7d       	andi	r24, 0xDF	; 223
 9e8:	8c 93       	st	X, r24
			}
}
 9ea:	0f 90       	pop	r0
 9ec:	0f 90       	pop	r0
 9ee:	0f 90       	pop	r0
 9f0:	cf 91       	pop	r28
 9f2:	df 91       	pop	r29
 9f4:	08 95       	ret

000009f6 <MGIE_voidEnable>:

#define GIE_SREG_REG    *((volatile u8 *) 0X5F)


void MGIE_voidEnable(void)
{
 9f6:	df 93       	push	r29
 9f8:	cf 93       	push	r28
 9fa:	cd b7       	in	r28, 0x3d	; 61
 9fc:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(GIE_SREG_REG,7);
 9fe:	af e5       	ldi	r26, 0x5F	; 95
 a00:	b0 e0       	ldi	r27, 0x00	; 0
 a02:	ef e5       	ldi	r30, 0x5F	; 95
 a04:	f0 e0       	ldi	r31, 0x00	; 0
 a06:	80 81       	ld	r24, Z
 a08:	80 68       	ori	r24, 0x80	; 128
 a0a:	8c 93       	st	X, r24
}
 a0c:	cf 91       	pop	r28
 a0e:	df 91       	pop	r29
 a10:	08 95       	ret

00000a12 <MGIE_voidDisable>:
void MGIE_voidDisable(void)
{
 a12:	df 93       	push	r29
 a14:	cf 93       	push	r28
 a16:	cd b7       	in	r28, 0x3d	; 61
 a18:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(GIE_SREG_REG,7);
 a1a:	af e5       	ldi	r26, 0x5F	; 95
 a1c:	b0 e0       	ldi	r27, 0x00	; 0
 a1e:	ef e5       	ldi	r30, 0x5F	; 95
 a20:	f0 e0       	ldi	r31, 0x00	; 0
 a22:	80 81       	ld	r24, Z
 a24:	8f 77       	andi	r24, 0x7F	; 127
 a26:	8c 93       	st	X, r24
}
 a28:	cf 91       	pop	r28
 a2a:	df 91       	pop	r29
 a2c:	08 95       	ret

00000a2e <main>:
#include "EXTI_Interface.h"
#include "util/delay.h"
#define F_CPU 8000000UL

void main (void)
{
 a2e:	df 93       	push	r29
 a30:	cf 93       	push	r28
 a32:	cd b7       	in	r28, 0x3d	; 61
 a34:	de b7       	in	r29, 0x3e	; 62
	MDIO_voidSetPinDirection(PORTD,PIN2, INPUT); /* to declare INT0 */
 a36:	83 e0       	ldi	r24, 0x03	; 3
 a38:	62 e0       	ldi	r22, 0x02	; 2
 a3a:	40 e0       	ldi	r20, 0x00	; 0
 a3c:	0e 94 3e 00 	call	0x7c	; 0x7c <MDIO_voidSetPinDirection>
	MDIO_voidSetPinDirection(PORTA,PIN0, OUTPUT); /* To check result of interrupt */
 a40:	80 e0       	ldi	r24, 0x00	; 0
 a42:	60 e0       	ldi	r22, 0x00	; 0
 a44:	41 e0       	ldi	r20, 0x01	; 1
 a46:	0e 94 3e 00 	call	0x7c	; 0x7c <MDIO_voidSetPinDirection>
	MDIO_voidSetPinValue(PORTD,PIN2,HIGH);
 a4a:	83 e0       	ldi	r24, 0x03	; 3
 a4c:	62 e0       	ldi	r22, 0x02	; 2
 a4e:	41 e0       	ldi	r20, 0x01	; 1
 a50:	0e 94 60 01 	call	0x2c0	; 0x2c0 <MDIO_voidSetPinValue>

	MGIE_voidEnable();
 a54:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <MGIE_voidEnable>
	MEXTI_voidSenseControl(EXTI_LINE0, EXTI_FALLING);
 a58:	80 e0       	ldi	r24, 0x00	; 0
 a5a:	62 e0       	ldi	r22, 0x02	; 2
 a5c:	0e 94 8d 03 	call	0x71a	; 0x71a <MEXTI_voidSenseControl>
	MEXTI_voidEnable(EXTI_LINE0);
 a60:	80 e0       	ldi	r24, 0x00	; 0
 a62:	0e 94 8d 04 	call	0x91a	; 0x91a <MEXTI_voidEnable>
 a66:	ff cf       	rjmp	.-2      	; 0xa66 <main+0x38>

00000a68 <__vector_1>:
}

volatile u8 global_u8Flag;
void __vector_1(void)   __attribute__((signal));
void __vector_1(void)
{
 a68:	1f 92       	push	r1
 a6a:	0f 92       	push	r0
 a6c:	0f b6       	in	r0, 0x3f	; 63
 a6e:	0f 92       	push	r0
 a70:	11 24       	eor	r1, r1
 a72:	2f 93       	push	r18
 a74:	3f 93       	push	r19
 a76:	4f 93       	push	r20
 a78:	5f 93       	push	r21
 a7a:	6f 93       	push	r22
 a7c:	7f 93       	push	r23
 a7e:	8f 93       	push	r24
 a80:	9f 93       	push	r25
 a82:	af 93       	push	r26
 a84:	bf 93       	push	r27
 a86:	ef 93       	push	r30
 a88:	ff 93       	push	r31
 a8a:	df 93       	push	r29
 a8c:	cf 93       	push	r28
 a8e:	cd b7       	in	r28, 0x3d	; 61
 a90:	de b7       	in	r29, 0x3e	; 62
//	u8 local_u8value=MDIO_u8GetPinValue(PORTA, 0);
//	MDIO_voidSetPinValue(PORTA,PIN0,(~local_u8value));

	if (global_u8Flag==0)
 a92:	80 91 60 00 	lds	r24, 0x0060
 a96:	88 23       	and	r24, r24
 a98:	49 f4       	brne	.+18     	; 0xaac <__vector_1+0x44>
	{
		MDIO_voidSetPinValue(PORTA,PIN0,LOW);
 a9a:	80 e0       	ldi	r24, 0x00	; 0
 a9c:	60 e0       	ldi	r22, 0x00	; 0
 a9e:	40 e0       	ldi	r20, 0x00	; 0
 aa0:	0e 94 60 01 	call	0x2c0	; 0x2c0 <MDIO_voidSetPinValue>
		global_u8Flag=1;
 aa4:	81 e0       	ldi	r24, 0x01	; 1
 aa6:	80 93 60 00 	sts	0x0060, r24
 aaa:	07 c0       	rjmp	.+14     	; 0xaba <__vector_1+0x52>
	}
	else
	{
		MDIO_voidSetPinValue(PORTA,PIN0,HIGH);
 aac:	80 e0       	ldi	r24, 0x00	; 0
 aae:	60 e0       	ldi	r22, 0x00	; 0
 ab0:	41 e0       	ldi	r20, 0x01	; 1
 ab2:	0e 94 60 01 	call	0x2c0	; 0x2c0 <MDIO_voidSetPinValue>
		global_u8Flag=0;
 ab6:	10 92 60 00 	sts	0x0060, r1
	}

}
 aba:	cf 91       	pop	r28
 abc:	df 91       	pop	r29
 abe:	ff 91       	pop	r31
 ac0:	ef 91       	pop	r30
 ac2:	bf 91       	pop	r27
 ac4:	af 91       	pop	r26
 ac6:	9f 91       	pop	r25
 ac8:	8f 91       	pop	r24
 aca:	7f 91       	pop	r23
 acc:	6f 91       	pop	r22
 ace:	5f 91       	pop	r21
 ad0:	4f 91       	pop	r20
 ad2:	3f 91       	pop	r19
 ad4:	2f 91       	pop	r18
 ad6:	0f 90       	pop	r0
 ad8:	0f be       	out	0x3f, r0	; 63
 ada:	0f 90       	pop	r0
 adc:	1f 90       	pop	r1
 ade:	18 95       	reti

00000ae0 <_exit>:
 ae0:	f8 94       	cli

00000ae2 <__stop_program>:
 ae2:	ff cf       	rjmp	.-2      	; 0xae2 <__stop_program>
